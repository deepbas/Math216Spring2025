---
title: "Day 14"
title-slide-attributes:
  data-background-image: images/lake.jpg
  data-background-size: contain
  data-background-opacity: "0.5"
subtitle: "Math 216: Statistical Thinking"
author: "Bastola"
format:
  revealjs:
    html-math-method: mathjax
    mathjax-url: "https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/MathJax.js" 
    theme: [default, scss/main.scss]
    slide-number: true
    preview-links: auto
    history: true
    chalkboard: 
      src: drawings.json
    transition: slide
    background-transition: fade    
    touch: false
    controls: true
---

```{r setup, include=FALSE}
options(htmltools.dir.version = FALSE)
options(htmltools.preserve.raw = FALSE)
options(ggrepel.max.overlaps = Inf)


# load necessary packages
library(tidyverse)
library(countdown)
library(mosaic)
library(ggthemes)
library(forcats)
library(patchwork)
library(Lock5Data)
library(plotly)

# Set ggplot theme
theme_set(theme_tufte(base_size = 10))
yt <- 0
#<iframe width="1380" height="900" src="https://www.geogebra.org/m/mehn8u8s"></iframe>
#::: {.callout-note title="Definition"}
```



## Introduction to Assessing Normality {.font80}


::: cle13

- **Objective**: Learn to determine if sample data originate from a normally distributed population, a prerequisite for many statistical analysis techniques.

- **Context**: Before applying statistical methods that assume normality, it's crucial to verify that the assumption holds for your data.


:::


## Applications of the Normal Distribution {.font80}


::: cle10

- **Histogram and Density Plots**: Begin by visualizing the distribution of your data. A histogram or density plot should reveal a bell-shaped curve, characteristic of a normal distribution. The symmetry and spread are your initial indicators.

- **Normal Q-Q Plot**: This plot displays your sample data against the expected quantiles of a normal distribution. If your data points align closely with the reference line (a 45-degree angle), your data likely follow a normal distribution. Deviations from this line indicate potential skewness or the presence of outliers.

:::


## The Empirical Rule and Its Application {.font80}

::: cle6
- **Understanding the Rule**: According to the empirical rule, if the data are normal:
  - Approximately 68% of data should fall within one standard deviation (±1σ) of the mean.
  - About 95% fall within two standard deviations (±2σ).
  - Nearly 99.7% should lie within three standard deviations (±3σ).
- **Application**: Calculate these intervals for your data and check the percentages. Close alignment with these percentages supports the assumption of normality.

:::


## IQR to Standard Deviation Ratio {.font80}


::: cle9
**Rationale**: The ratio of the Interquartile Range (IQR) to the standard deviation (s) is another metric used to assess normality. For normally distributed data, this ratio should be approximately 1.3.

**Method**: Calculate the IQR (the range between the 25th and 75th percentiles) and the standard deviation of your sample. Compare their ratio to 1.3 to gain another perspective on your data's normality.
:::


## Statistical Tests for Normality {.font80}


::: cle13
**Shapiro-Wilk Test**: This test is particularly effective for smaller data sets. It assesses whether the data's arrangement is likely to be derived from a normal distribution.

**Kolmogorov-Smirnov Test**: Useful for comparing your sample with a specified normal distribution. This test checks the largest difference between the empirical and the theoretical cumulative distribution functions.

:::


## Case Study: EPA ratings {.font80}

<br>

> The dataset consists of EPA gas mileage ratings for 100 cars. Each value represents the miles per gallon (MPG) that a particular car achieves under standardized testing conditions. This dataset can help understand how statistical methods are applied in real-world scenarios like assessing the fuel efficiency of vehicles.


## {.font60}

::: panel-tabset

### Data

EPA Gas Mileage Ratings for 100 Cars (miles per gallon) 

| col1 |col2|col3|col4|col5|col6|col7|col8|col9|col10|
| :------|:------|:------|:------|:------|:------|:------|:------|:------|:------|
| 36.3 | 41.0 | 36.9 | 37.1 | 44.9 | 36.8 | 30.0 | 37.2 | 42.1 | 36.7 |
| 32.7 | 37.3 | 41.2 | 36.6 | 32.9 | 36.5 | 33.2 | 37.4 | 37.5 | 33.6 |
| 40.5 | 36.5 | 37.6 | 33.9 | 40.2 | 36.4 | 37.7 | 37.7 | 40.0 | 34.2 |
| 36.2 | 37.9 | 36.0 | 37.9 | 35.9 | 38.2 | 38.3 | 35.7 | 35.6 | 35.1 |
| 38.5 | 39.0 | 35.5 | 34.8 | 38.6 | 39.4 | 35.3 | 34.4 | 38.8 | 39.7 |
| 36.3 | 36.8 | 32.5 | 36.4 | 40.5 | 36.6 | 36.1 | 38.2 | 38.4 | 39.3 |
| 41.0 | 31.8 | 37.3 | 33.1 | 37.0 | 37.6 | 37.0 | 38.7 | 39.0 | 35.8 |
| 37.0 | 37.2 | 40.7 | 37.4 | 37.1 | 37.8 | 35.9 | 35.6 | 36.7 | 34.5 |
| 37.1 | 40.3 | 36.7 | 37.0 | 33.9 | 40.1 | 38.0 | 35.2 | 34.8 | 39.5 |
| 39.9 | 36.9 | 32.9 | 33.8 | 39.8 | 34.0 | 36.8 | 35.0 | 38.1 | 36.9 |

### R code

```{r}
# store 100 mpgs in an object called 'mpg'
mpg <- c(
  36.3, 41.0, 36.9, 37.1, 44.9, 36.8, 30.0, 37.2, 42.1, 36.7,
  32.7, 37.3, 41.2, 36.6, 32.9, 36.5, 33.2, 37.4, 37.5, 33.6,
  40.5, 36.5, 37.6, 33.9, 40.2, 36.4, 37.7, 37.7, 40.0, 34.2,
  36.2, 37.9, 36.0, 37.9, 35.9, 38.2, 38.3, 35.7, 35.6, 35.1,
  38.5, 39.0, 35.5, 34.8, 38.6, 39.4, 35.3, 34.4, 38.8, 39.7,
  36.3, 36.8, 32.5, 36.4, 40.5, 36.6, 36.1, 38.2, 38.4, 39.3,
  41.0, 31.8, 37.3, 33.1, 37.0, 37.6, 37.0, 38.7, 39.0, 35.8,
  37.0, 37.2, 40.7, 37.4, 37.1, 37.8, 35.9, 35.6, 36.7, 34.5,
  37.1, 40.3, 36.7, 37.0, 33.9, 40.1, 38.0, 35.2, 34.8, 39.5,
  39.9, 36.9, 32.9, 33.8, 39.8, 34.0, 36.8, 35.0, 38.1, 36.9
)

mpg_data <- data.frame(mpg = mpg)
```


:::

## {.font80}

::: panel-tabset

### Histogram

```{r, echo=FALSE}
library(ggplot2)
ggplot(mpg_data, aes(x = mpg)) +
  geom_histogram(aes(y = ..density..), bins = 25, fill = "skyblue", color = "black") +
  geom_density(color = "red")
```


### R-Code

```{r, eval=FALSE}
library(ggplot2)
ggplot(mpg_data, aes(x = mpg)) +
  geom_histogram(aes(y = ..density..), bins = 25, fill = "skyblue", color = "black") +
  geom_density(color = "red")
```



:::


## {.font80}

::: panel-tabset

### QQ Plot

```{r, echo=FALSE}
ggplot(mpg_data, aes(sample = mpg)) +
  stat_qq() +
  stat_qq_line(col = "blue")
```



### R-Code

```{r, eval=FALSE}
ggplot(mpg_data, aes(sample = mpg)) +
  stat_qq() +
  stat_qq_line(col = "blue")
```



:::


## Tests for Normality {.font80}

**Shapiro-Wilk Normality Test**

```{r}
shapiro.test(mpg_data$mpg)
```


**Kolmogorov-Smirnov Test**

```{r}
ks.test(mpg_data$mpg, "pnorm", mean = mean(mpg_data$mpg), sd = sd(mpg_data$mpg))
```


## Summary Statistics {.font80}

```{r}
library(dplyr)

# Calculate summary statistics
summary_stats <- mpg_data %>%
  summarise(
    Mean = mean(mpg),
    IQR = IQR(mpg),
    SD = sd(mpg),
    Ratio = IQR(mpg) / sd(mpg),
    Within_1sd = mean(mpg >= (Mean - SD) & mpg <= (Mean + SD)),
    Within_2sd = mean(mpg >= (Mean - 2 * SD) & mpg <= (Mean + 2 * SD)),
    Within_3sd = mean(mpg >= (Mean - 3 * SD) & mpg <= (Mean + 3 * SD))
  )

summary_stats
```




