{
  "hash": "cde70ff9493edb95505748dc1e42f2ab",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Activity 12\"\nsubtitle: \"MATH 216: Statistical Thinking\"\nformat: live-html\nengine: knitr\ntoc: true\nwebr:\n  packages:\n    - dplyr\n    - ggplot2\n    - purrr\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n\n### Example 1: Probability Z < 1.28\n\nTo find the probability that the standard normal random variable \\(z\\) is less than 1.28:\n\n::: {.cell}\n```{webr}\n# Plot the standard normal distribution\nggplot(data = data.frame(x = c(-4, 4)), aes(x)) + \n  stat_function(fun = dnorm, args = list(mean = 0, sd = 1)) +\n  geom_vline(xintercept = 1.28, linetype = \"dashed\", color = \"blue\") +\n  xlab(\"z\") + ylab(\"f(z)\") + \n  theme_minimal()\n```\n:::\n\n\n### Example 2: Probability Z > 1.64\n\nTo find the probability that $z$ exceeds 1.64.\n\n::: {.cell}\n```{webr}\nggplot(data = data.frame(x = c(-4, 4)), aes(x)) + \n  stat_function(fun = dnorm, args = list(mean = 0, sd = 1)) +\n  geom_vline(xintercept = 1.64, linetype = \"dashed\", color = \"blue\") +\n  xlab(\"z\") + ylab(\"f(z)\") + \n  theme_minimal() \n```\n:::\n\n\n\n### Example 3: Probability Z < -1.64\n\nTo find the probability that $z$ is less than -1.64.\n\n\n::: {.cell}\n```{webr}\nggplot(data = data.frame(x = c(-4, 4)), aes(x)) + \n  stat_function(fun = dnorm, args = list(mean = 0, sd = 1)) +\n  geom_vline(xintercept = -1.64, linetype = \"dashed\", color = \"blue\") +\n  xlab(\"z\") + ylab(\"f(z)\") + \n  theme_minimal() \n\n```\n:::\n\n\n### Example 4: Probability Z > -1.28\n\nTo find the probability that $z$ exceeds -1.28.\n\n::: {.cell}\n```{webr}\nggplot(data = data.frame(x = c(-4, 4)), aes(x)) + \n  stat_function(fun = dnorm, args = list(mean = 0, sd = 1)) +\n  geom_vline(xintercept = -1.28, linetype = \"dashed\", color = \"blue\") +\n  xlab(\"z\") + ylab(\"f(z)\") + \n  theme_minimal() \n\n```\n:::\n\n\n### Example 5: Probability -1.64 < Z < 1.28\n\nTo find the probability that $z$ lies between -1.64 and 1.28.\n\n\n::: {.cell}\n```{webr}\nggplot(data = data.frame(x = c(-4, 4)), aes(x)) + \n  stat_function(fun = dnorm, args = list(mean = 0, sd = 1)) +\n  geom_vline(xintercept = c(-1.64, 1.28), linetype = \"dashed\", color = \"blue\") +\n  xlab(\"z\") + ylab(\"f(z)\") + \n  theme_minimal()\n```\n:::\n\n\n### Example 6: Probability |Z| > 1.96\n\nTo find the probability that the absolute value of $z$ exceeds 1.96.\n\n::: {.cell}\n```{webr}\nggplot(data = data.frame(x = c(-4, 4)), aes(x)) + \n  stat_function(fun = dnorm, args = list(mean = 0, sd = 1)) +\n  geom_vline(xintercept = c(-1.96, 1.96), linetype = \"dashed\", color = \"blue\") +\n  xlab(\"z\") + ylab(\"f(z)\") + \n  theme_minimal() \n```\n:::\n\n\n### Example 7: Probability for a Normal Distribution\n\nSuppose the length of time $x$, between charges of a cellular phone is normally distributed with a mean of 10 hours and a standard deviation of 1.5 hours. To find the probability that the cell phone will last between 8 and 12 hours.\n\n::: {.cell}\n```{webr}\nmu <- 10  # mean\nsigma <- 1.5  # standard deviation\nlower <- (8 - mu) / sigma\nupper <- (12 - mu) / sigma\n\nggplot(data = data.frame(x = c((mu - 4 * sigma), (mu + 4 * sigma))), aes(x)) + \n  stat_function(fun = function(x) dnorm(x, mean = mu, sd = sigma), color = \"red\") +\n  geom_area(stat = \"function\", fun = function(x) dnorm(x, mean = mu, sd = sigma),\n            xlim = c(8, 12), fill = \"blue\", alpha = 0.3) +\n  xlab(\"Hours\") + ylab(\"Density\") + \n  theme_minimal()\n```\n:::\n\n\n### Example 8: College entrance examination\n\nSuppose the scores $x$ on a college entrance examination are normally distributed with a mean of 550 and a standard deviation of 100. A certain prestigious university will consider for admission only those applicants whose scores exceed the 90th percentile of the distribution. Find the minimum score an applicant must achieve in order to receive consideration for admission to the university.\n\n\n\\vspace*{1in}\n\n### Example 9: Quantile\n\nFind $z_0$ such that $P(-z_0 \\leq z \\leq z_0)=0.95$.\n\n\n",
    "supporting": [
      "Activity12_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}