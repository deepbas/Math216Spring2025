{
  "hash": "77e4e547cf2a37a0937af968b1db55d6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 24\"\ntitle-slide-attributes:\n  data-background-image: images/lake.jpg\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nsubtitle: \"Math 216: Statistical Thinking\"\nauthor: \"Bastola\"\nformat:\n  revealjs:\n    html-math-method: mathjax\n    mathjax-url: \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/MathJax.js\" \n    theme: [default, scss/main.scss]\n    slide-number: true\n    preview-links: auto\n    history: true\n    chalkboard: \n      src: drawings.json\n    transition: slide\n    background-transition: fade    \n    touch: false\n    controls: true\n---\n\n\n\n\n## Steps for Hypothesis Testing Part I: {.font60}\n\n::: cle6\n\n1. **State the Hypotheses**\n   - Null Hypothesis ($H_0$): No effect or no difference, posits that $\\mu = \\mu_0$.\n   - Alternative Hypothesis ($H_A$): Asserts a specific claim about the population mean $\\mu$ that is different from $\\mu_0$ (e.g., $\\mu > \\mu_0$, $\\mu < \\mu_0$, or $\\mu \\neq \\mu_0$).\n\n2. **Set the Significance Level ($\\alpha$)**\n   - The probability of making a Type I error (rejecting a true null hypothesis). Common values are 0.05, 0.01, or 0.10.\n\n3. **Assumptions**\n   - The sample is a simple random sample.\n   - The sample size is large (usually $n \\geq 30$), which justifies the use of the Central Limit Theorem.\n\n4. **Collect Data**\n   - Obtain a random sample and compute the sample mean ($\\bar{X}$) and standard deviation ($S$).\n:::\n\n\n## Steps for Hypothesis Testing Part II: {.font40}\n\n::: cle7\n5. **Calculate the Test Statistic ($z$)**\n   - If the population standard deviation ($\\sigma$) is known:\n     $$ z = \\frac{\\bar{X} - \\mu_0}{\\sigma/\\sqrt{n}} $$\n   - If $\\sigma$ is unknown and $n \\geq 30$, use $s$ (sample standard deviation):\n     $$ z = \\frac{\\bar{X} - \\mu_0}{s/\\sqrt{n}} $$\n\n\n\n6. **Decision Rule**\n\n   - For a one-tailed test: Reject $H_0$ if $z$ falls in the rejection region (either $z < -z_{\\alpha}$ for left-tailed or $z > z_{\\alpha}$ for right-tailed).\n   - For a two-tailed test: Reject $H_0$ if $|z| > z_{\\alpha/2}$.\n\n7. **Compute the P-Value**\n   - The probability of observing a test statistic as extreme as, or more extreme than, the statistic calculated from the sample data, assuming that $H_0$ is true.\n\n8. **Conclusion**\n   - Reject $H_0$ if the p-value is less than $\\alpha$; otherwise, do not reject $H_0$. Report whether the evidence supports $H_a$ based on the statistical significance.\n\n:::\n\n\n## One-Sided (Greater Than) Example {.font60}\n\n::: cle14\n- **Scenario**: A study group claims that their session increases the average test score above 75.\n- **Sample Data**: $\\bar{x} = 78$, $s = 5$, $n = 30$\n- **Test**: $H_0: \\mu \\leq 75$ vs. $H_a: \\mu > 75$\n- **Calculation**: $z = \\frac{78 - 75}{5/\\sqrt{30}} \\approx 3.29$\n- **Conclusion**: Reject $H_0$ if $z > 1.645$ (at $\\alpha = 0.05$).\n:::\n\n## One-Sided (Less Than) Example {.font60}\n\n::: cle6\n\n- **Scenario**: A nutritionist claims that a new diet reduces the average calorie intake below 2200 calories/day.\n- **Sample Data**: $\\bar{x} = 2150$, $s = 120$, $n = 35$\n- **Test**: $H_0: \\mu \\geq 2200$ vs. $H_a: \\mu < 2200$\n- **Calculation**: $z = \\frac{2150 - 2200}{120/\\sqrt{35}} \\approx -2.47$\n- **Conclusion**: Reject $H_0$ if $z < -1.645$ (at $\\alpha = 0.05$).\n\n:::\n\n## Two sided example {.font60}\n\n::: cle15\n- **Scenario**: An analyst claims that a new billing system changes the average monthly bill from $100.\n- **Sample Data**: $\\bar{x} = 105$, $s = 10$, $n = 40$\n- **Test**: $H_0: \\mu = 100$ vs. $H_a: \\mu \\neq 100$\n- **Calculation**: $z = \\frac{105 - 100}{10/\\sqrt{40}} \\approx 3.16$\n- **Conclusion**: Reject $H_0$ if $|z| > 1.96$ (at $\\alpha = 0.05$).\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}