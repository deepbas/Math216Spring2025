{
  "hash": "8650d1a8f62d3f7442223822649f9205",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Activity 16\"\nsubtitle: \"MATH 216: Statistical Thinking\"\nformat: live-html\nengine: knitr\ntoc: true\nwebr:\n  packages:\n    - dplyr\n    - ggplot2\n    - purrr\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n\n## Activity 1: Think-Pair-Share\n\n1. **Think**: Reflect on why unbiasedness is important in statistical estimation.\n\n2. **Pair**: Discuss with a partner whether they would prefer an unbiased estimator with high variance or a slightly biased estimator with low variance.\n\n3. **Share**: Share your insights with the class.\n\n\n## Activity 2: Conceptual understanding\n\nSuppose two statistics, $A$ and $B$, exist to estimate the same population parameter $\\theta$ (theta). (Note that $\\theta$ could be any parameter: $\\mu, \\sigma^2$, etc.) Suppose the two statistics have sampling distributions as shown in the following figure. On the basis of these sampling distributions, which statistic is more attractive as an estimator of $\\theta$ ?\n\n![](images/unbiasedness.png)\n\n## Activity 3: Quiz\n\n- **Question**: What does the standard error measure in the context of sampling distributions?\n\nA). The mean of the sampling distribution  \nB). The spread of the sampling distribution  \nC). The bias of the estimator  \nD). The population parameter  \n\n\n## Activity 4: Group Activities with Real Data\n\n**Prompt**: The rolling machine of a steel manufacturer produces sheets of steel of varying thickness. The thickness of a steel sheet follows a uniform distribution with values between 150 and 200 millimeters. Suppose we perform the following experiment over and over again: Randomly sample 11 steel sheets from the production line and record the thickness x of each. Calculate the two sample statistics:\n\n$$\n\\bar{x}=\\text { Sample mean }=\\sum x / 11\n$$\n\n\n$M=$ Median = Sixth sample measurement when the 11 thicknesses 1 are arranged in ascending order\nObtain approximations to the sampling distributions of $\\bar{x}$ and $M$.\nSince we know that it is uniform distribution, the mean is 175 mm . But let's assume that we don't know that and just use the sampling to approximate the parameter.\n\n1. Analyze the steel thickness dataset.\n\n![](images/example6.1.png)\n\n2. Compare the sampling distributions of $\\bar{x}$ and $M$.\n\n![](images/mean_median6.1.png)\n\n3. Discuss which statistic (mean or median) is a better estimator of the population parameter and why.\n\n\n\n## Activity 5: Case Studies and Problem-Solving\n\n\n- **Scenario**: A factory produces steel sheets with thicknesses following a uniform distribution. The quality control team wants to estimate the average thickness using sample statistics.\n\n- **Task**: Apply the concepts of unbiasedness and standard error to determine whether the sample mean or median is a better estimator for the population mean.\n\n::: {.cell}\n```{webr}\nset.seed(123)\n\n# Population parameters (uniform distribution)\na <- 1  # minimum thickness\nb <- 3  # maximum thickness\ntrue_mean <- (a + b)/2  # Population mean = 2\n\n# Generate sampling distributions\nn_samples <- 10000\nsample_size <- 100\n\nsample_means <- replicate(n_samples, mean(runif(sample_size, a, b)))\nsample_medians <- replicate(n_samples, median(runif(sample_size, a, b)))\n\n# Calculate estimator properties\nmean_bias <- mean(sample_means) - true_mean\nmedian_bias <- mean(sample_medians) - true_mean\nse_mean <- sd(sample_means)\nse_median <- sd(sample_medians)\n\n# Create comparison data frame\nestimators <- data.frame(\n  Estimate = c(sample_means, sample_medians),\n  Type = rep(c(\"Mean\", \"Median\"), each = n_samples)\n)\n\n# Density plot comparing estimators\nggplot(estimators, aes(x = Estimate, fill = Type)) +\n  geom_density(alpha = 0.5) +\n  geom_vline(xintercept = true_mean, linetype = \"dashed\") +\n  labs(title = \"Sampling Distributions of Mean vs Median\",\n       subtitle = paste(\"True population mean =\", true_mean),\n       x = \"Estimate Value\", y = \"Density\") +\n  theme_minimal()\n```\n:::\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}