{
  "hash": "ba9df59722e85ce2918e268cb7bbf508",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 25\"\ntitle-slide-attributes:\n  data-background-image: images/lake.jpg\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nsubtitle: \"Math 216: Statistical Thinking\"\nauthor: \"Bastola\"\nformat:\n  revealjs:\n    html-math-method: mathjax\n    mathjax-url: \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/MathJax.js\" \n    theme: [default, scss/main.scss]\n    slide-number: true\n    preview-links: auto\n    history: true\n    chalkboard: \n      src: drawings.json\n    transition: slide\n    background-transition: fade    \n    touch: false\n    controls: true\n---\n\n\n\n\n## Introduction to Small Sample Confidence Intervals {.font80}\n\n::: cle6\n- **Background**: Confidence intervals and hypothesis testing for large samples ($n \\geq 30$) rely on the $z$-statistic.\n- **Challenge**: What happens with a small sample size ($n < 30$) where the Central Limit Theorem does not apply?\n\n:::\n\n## Adjusting for Small Samples {.font70}\n\n::: cle6\n- **Population Distribution**: If the sample comes from an approximately normal distribution, we can use the $t$-statistic.\n- **Standard Deviation**: When the population standard deviation $\\sigma$ is unknown and $n < 30$, using the sample standard deviation $s$ to approximate $\\sigma$ is unreliable.\n- **Solution**:\n  $$\n  t=\\frac{\\bar{x}-\\mu}{s / \\sqrt{n}}\n  $$\n  - Follows a $t$-distribution with degrees of freedom, $df = n-1$.\n:::\n\n\n\n## Confidence Interval Using Student's t-Statistic {.font80}\n\n::: cle9\n- **When $\\sigma$ is unknown**: Use the $t$-statistic for confidence intervals.\n  - For a $95\\%$ confidence interval:\n    $$\n    \\bar{x} \\pm t_{\\alpha/2} \\left(\\frac{s}{\\sqrt{n}}\\right)\n    $$\n    where $t_{\\alpha/2}$ is determined from the $t$-distribution table for $df = n-1$.\n:::\n\n\n## {.font60}\n\n<img src=\"images/t-table.png\" style=\"display: block; margin: auto;\" width=\"90%\"  loading=\"lazy\" decoding=\"async\">\n\n\n\n## Calculation of P-Value {.font80}\n\n::: cle7\n- **When $n<30$** and $\\sigma$ is unknown:\n  - **Use Case**: If the population is approximately normally distributed.\n  - **Student's t-Statistic**:\n    $$\n    t = \\frac{\\bar{x} - \\mu_{0}}{s / \\sqrt{n}}\n    $$\n    - Follows a $t$-distribution with $df = n - 1$.\n:::\n\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}